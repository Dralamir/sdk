////////////////////////////////////////////////////////////////////////////////////  OpenZoom////  Copyright (c) 2007-2009, Daniel Gasienica <daniel@gasienica.ch>////  OpenZoom is free software: you can redistribute it and/or modify//  it under the terms of the GNU General Public License as published by//  the Free Software Foundation, either version 3 of the License, or//  (at your option) any later version.////  OpenZoom is distributed in the hope that it will be useful,//  but WITHOUT ANY WARRANTY; without even the implied warranty of//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the//  GNU General Public License for more details.////  You should have received a copy of the GNU General Public License//  along with OpenZoom. If not, see <http://www.gnu.org/licenses/>.//////////////////////////////////////////////////////////////////////////////////package org.openzoom.examples.ityl.pages{import flash.display.SimpleButton;import flash.events.MouseEvent;import org.openzoom.examples.ityl.ReturnButtonAsset;import org.openzoom.flash.events.RendererEvent;import org.openzoom.flash.renderers.Renderer;import org.openzoom.flash.viewport.ISceneViewport;import org.openzoom.flash.viewport.SceneViewport;public class Page extends Renderer{    //--------------------------------------------------------------------------    //    //  Constructor    //    //--------------------------------------------------------------------------    /**     * Constructor.     */    public function Page()    {        addEventListener(RendererEvent.ADDED_TO_SCENE,                         addedToSceneHandler,                         false, 0, true)        returnButton = new ReturnButtonAsset()        returnButton.scaleX = returnButton.scaleY = 0.6        returnButton.x = width - returnButton.width - 40        returnButton.y = 40        addChild(returnButton)    }    //--------------------------------------------------------------------------    //    //  Variables    //    //--------------------------------------------------------------------------    private var returnButton:SimpleButton    //--------------------------------------------------------------------------    //    //  Methods    //    //--------------------------------------------------------------------------    public function focus():void    {        var svp:ISceneViewport = SceneViewport.getInstance(viewport)        svp.fitToBounds(getBounds(scene.targetCoordinateSpace), 0.8)    }    //--------------------------------------------------------------------------    //    //  Event handlers    //    //--------------------------------------------------------------------------    private function addedToSceneHandler(event:RendererEvent):void    {        returnButton.addEventListener(MouseEvent.CLICK,                                      returnButton_clickHandler,                                      false, 0, true)    }    private function returnButton_clickHandler(event:MouseEvent):void    {        viewport.showAll()    }}}